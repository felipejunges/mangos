@model Mangos.Mvc.Models.ViewModels.LancamentoCartaoEdicaoModel

@{
    Layout = "~/Views/Shared/_LayoutModal.cshtml";
    ViewData["Title"] = "Editar lançamento de cartão";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <input type="hidden" asp-for="Id" />
    <input type="hidden" asp-for="GrupoId" />
    <input type="hidden" asp-for="Hash" />
    <input type="hidden" asp-for="GeradoLancamento" />
    <input type="hidden" asp-for="PessoaId" />

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group row">
            <label asp-for="Descricao" class="col-md-2 text-md-right col-form-label col-form-label-sm"></label>
            <div class="col-md-10">
                <input asp-for="Descricao" class="form-control form-control-sm" />
                <span asp-validation-for="Descricao" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group row">
            <label asp-for="CartaoCreditoId" class="col-md-2 text-md-right col-form-label col-form-label-sm"></label>
            <div class="col-md-5">
                <select asp-for="CartaoCreditoId" class="form-control form-control-sm" asp-items="@(new SelectList(Model.CartoesCredito, "Id", "Descricao", null))">
                    <option value="">Selecione</option>
                </select>
                <span asp-validation-for="CartaoCreditoId" class="text-danger"></span>
            </div>

            @Html.LabelFor(model => model.TipoLancamento, htmlAttributes: new { @class = "col-md-2 text-md-right col-form-label col-form-label-sm" })
            <div class="col-md-3">
                <div class="input-group">
                    <div id="opcoes-tipo-lancamento" class="btn-group">
                        <a class="btn btn-light btn-sm @(Model.TipoLancamento == TipoLancamentoCartao.Receita ? "active" : "notActive")" data-toggle="TipoLancamento" data-title="@TipoLancamentoCartao.Receita">@TipoLancamentoCartao.Receita.GetDescription()</a>
                        <a class="btn btn-light btn-sm @(Model.TipoLancamento == TipoLancamentoCartao.Despesa ? "active" : "notActive")" data-toggle="TipoLancamento" data-title="@TipoLancamentoCartao.Despesa">@TipoLancamentoCartao.Despesa.GetDescription()</a>
                    </div>
                    <input type="hidden" name="TipoLancamento" id="TipoLancamento" value="@Model.TipoLancamento.ToString()">
                </div>
                @Html.ValidationMessageFor(model => model.TipoLancamento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "col-md-2 text-md-right col-form-label col-form-label-sm" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control form-control-sm campoValor" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.Label("MesReferencia", "Mês referência", htmlAttributes: new { @for = "MesReferencia", @class = "col-md-2 text-md-right col-form-label col-form-label-sm" })
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.MesReferencia, "{0:MM/yyyy}", new { @class = "form-control form-control-sm campoMesAno" })
                @Html.ValidationMessageFor(model => model.MesReferencia, "", new { @class = "text-danger" })
            </div>

            @Html.Label("Parcela", "Parcela", htmlAttributes: new { @class = "col-md-2 text-md-right col-form-label col-form-label-sm" })
            <div class="col-md-4">
                <div class="input-group input-group-sm">
                    @Html.EditorFor(model => model.NumeroParcela, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    <div class="input-group-append input-group-prepend">
                        <span class="input-group-text">/</span>
                    </div>
                    @Html.EditorFor(model => model.TotalParcelas, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                </div>

                @Html.ValidationMessageFor(model => model.NumeroParcela, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.TotalParcelas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.Label("Pessoa", "Pessoa", new { @for = "ProcuraPessoa", @class = "col-md-2 text-md-right col-form-label col-form-label-sm" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Pessoa, new { htmlAttributes = new { id = "ProcuraPessoa", @class = "form-control form-control-sm" } })
                @Html.ValidationMessageFor(model => model.PessoaId, "", new { @class = "text-danger" })
            </div>

            <label asp-for="CategoriaId" class="col-md-2 text-md-right col-form-label col-form-label-sm"></label>
            <div class="col-md-4">
                <select asp-for="CategoriaId" class="form-control form-control-sm" asp-items="@(new SelectList(Model.Categorias, "Id", "Descricao", null))">
                    <option value="">Nenhuma</option>
                </select>
                <span asp-validation-for="CategoriaId" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Observacoes, new { @class = "col-md-2 text-md-right col-form-label col-form-label-sm" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observacoes, new { htmlAttributes = new { @class = "form-control form-control-sm campo-observacoes" } })
                @Html.ValidationMessageFor(model => model.Observacoes, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}

@section Scripts {
    <script type="text/javascript">
        jQuery(document).ready(function () {
            var url = fullUrl + "Pessoa/BuscaPessoas";

            var tipoBusca = '@(Model.TipoLancamento == Mangos.Dominio.Enums.TipoLancamentoCartao.Receita ? "C" : "F")';

            jQuery('#ProcuraPessoa').autocomplete({
                serviceUrl: url,
                paramName: 'busca',
                minChars: 3,
                lookupLimit: 20,
                deferRequestBy: 250,
                zIndex: 10001,
                params: { tipo: tipoBusca },
                showNoSuggestionNotice: true,
                noSuggestionNotice: 'Nenhum resultado encontrado',
                onSelect: function (suggestion) {
                    $('#PessoaId').val(suggestion.data.pessoaId);

                    if (suggestion.data.categoriaId != null && $("#CategoriaId:has(option[value='" + suggestion.data.categoriaId + "'])").length > 0)
                        $('#CategoriaId').val(suggestion.data.categoriaId);
                },
                onInvalidateSelection: function () {
                    $('#PessoaId').val('');
                },
                onHide: function (container) {
                    if ($('#PessoaId').val() == '')
                        jQuery('#ProcuraPessoa').val('');
                }
            });
        });

        $('#opcoes-tipo-lancamento a').on('click', function () {
            var sel = $(this).data('title');
            var tog = $(this).data('toggle');
            $('#' + tog).prop('value', sel);

            var tipo = sel == "Receita" ? "C" : "F";
            var options = {
                params: { tipo: tipo }
            };
            jQuery('#ProcuraPessoa').autocomplete().setOptions(options);
            jQuery('#ProcuraPessoa').autocomplete().clear();

            $('a[data-toggle="' + tog + '"]').not('[data-title="' + sel + '"]').removeClass('active').addClass('notActive');
            $('a[data-toggle="' + tog + '"][data-title="' + sel + '"]').removeClass('notActive').addClass('active');
        });
    </script>
}