@model Mangos.Mvc.Models.ViewModels.LancamentoPagoInclusaoModel

@{
    ViewData["Title"] = "Incluir despesa paga";
    Layout = "~/Views/Shared/_LayoutModal.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.GrupoId)
    @Html.HiddenFor(model => model.PessoaId)

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group row">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "col-md-2 text-md-right col-form-label col-form-label-sm" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "col-md-2 text-md-right col-form-label col-form-label-sm" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control form-control-sm campoValor" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.DataPagamento, htmlAttributes: new { @class = "col-md-2 text-md-right col-form-label col-form-label-sm" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.DataPagamento, new { htmlAttributes = new { @class = "form-control form-control-sm campoData" } })
                @Html.ValidationMessageFor(model => model.DataPagamento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.Label("Pessoa", "Pessoa", new { @for = "ProcuraPessoa", @class = "col-md-2 text-md-right col-form-label col-form-label-sm" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Pessoa, new { htmlAttributes = new { id = "ProcuraPessoa", @class = "form-control form-control-sm" } })
                @Html.ValidationMessageFor(model => model.PessoaId, "", new { @class = "text-danger" })
            </div>

            <label asp-for="CategoriaId" class="col-md-2 text-md-right col-form-label col-form-label-sm"></label>
            <div class="col-md-4">
                <select asp-for="CategoriaId" class="form-control form-control-sm" asp-items="@(new SelectList(Model.Categorias, "Id", "Descricao", null))">
                    <option value="">Nenhuma</option>
                </select>
                <span asp-validation-for="CategoriaId" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group row">
            <label asp-for="ContaBancariaId" class="col-md-2 text-md-right col-form-label col-form-label-sm"></label>
            <div class="col-md-4">
                <select asp-for="ContaBancariaId" class="form-control form-control-sm" asp-items="@(new SelectList(Model.ContasBancarias, "Id", "Descricao", null))">
                    <option value="">Nenhuma</option>
                </select>
                <span asp-validation-for="ContaBancariaId" class="text-danger"></span>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script type="text/javascript">
        jQuery(document).ready(function () {
            //
            var url = fullUrl + "Pessoa/BuscaPessoas";

            jQuery('#ProcuraPessoa').autocomplete({
                serviceUrl: url,
                paramName: 'busca',
                minChars: 3,
                lookupLimit: 20,
                deferRequestBy: 250,
                zIndex: 10001,
                params: { tipo: 'F' },
                showNoSuggestionNotice: true,
                noSuggestionNotice: 'Nenhum resultado encontrado',
                onSelect: function (suggestion) {
                    $('#PessoaId').val(suggestion.data.pessoaId);

                    if (suggestion.data.categoriaId != null && $("#CategoriaId:has(option[value='" + suggestion.data.categoriaId + "'])").length > 0)
                        $('#CategoriaId').val(suggestion.data.categoriaId);
                },
                onInvalidateSelection: function () {
                    $('#PessoaId').val('');
                },
                onHide: function (container) {
                    if ($('#PessoaId').val() == '')
                        jQuery('#ProcuraPessoa').val('');
                }
            });
        });
    </script>
}